{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFecthGifs","key","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"qMA8BeA,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAevC,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC5CN,EAAc,OAOd,gDACA,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,Y,uBCP3CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDAEuBC,UAAUH,GAFjC,+DAGGI,MAAMF,GAHT,cAGfG,EAHe,gBAIEA,EAAUC,OAJZ,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCYPO,EATK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC3B,OACE,yBAAKc,UAAY,0CACf,yBAAKC,IAAMf,EAAKgB,IAAON,IACvB,+BAAKA,EAAL,OCeSO,EAlBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAQ,IAH8B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WACRxB,EAAQC,GACPwB,MAAK,SAAAC,GAENC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAQ,MAET,UAGD,CAACpB,IAGEqB,EDlBwBM,CAAa3B,GAAhCa,EAFoB,EAEzBN,KAAaa,EAFY,EAEZA,QAEpB,OACE,oCACE,wBAAIJ,UAAW,qCAAf,IAAqDhB,EAArD,KACCoB,GAAW,uBAAGJ,UAAU,oCAAb,aACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GACX,OAAO,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEkBhCmB,EA3BM,SAACC,GAAW,IAAD,EACM5C,mBAAS,CAAC,cADhB,mBACvBQ,EADuB,KACXT,EADW,KAO9B,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,6BAEIS,EAAWe,KAAI,SAACT,GACb,OAAO,kBAAC,EAAD,CACJA,SAAUA,EACV4B,IAAK5B,U,MCdnB+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4eb50037.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  //hook\r\n  const [inputValue, setInputValue] = useState('');\r\n  //Handlers\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [ inputValue,...categories]);\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button>Add category</button>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n//propTypes\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n//exports\r\nexport default AddCategory;\r\n","  export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9zYtGeReww7dhhLGd0lX1NQyx8AwOtbi`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };\r\n","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div className = \"card animate__animated animate__fadeIn\">\r\n      <img src= {url} alt = {title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from \"react\";\r\nimport { useFecthGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  \r\n  const {data:images, loading} = useFecthGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className= \"animate__animated animate__fadeIn\"> {category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\"> Loading </p> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};//End of component\r\n\r\n\r\nexport default GifGrid;\r\n","import { useState , useEffect} from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFecthGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading:true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(imgs => {\r\n\r\n    setTimeout(() => {\r\n      setState({\r\n        data: imgs,\r\n        loading:false\r\n      })\r\n    }, 3000);\r\n    \r\n    })\r\n   }, [category]);\r\n\r\n\r\n  return state; // {data y loading}\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\n//functional component\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n\r\n  // const handleAddCategory = e =>{\r\n  //   setCategories([...categories,'Goku'])\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GitExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr></hr>\r\n\r\n      <div>\r\n        {\r\n          categories.map((category) => {\r\n             return <GifGrid \r\n                category={category}\r\n                key={category} \r\n              />;\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","//9zYtGeReww7dhhLGd0lX1NQyx8AwOtbi  Giphy Key\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\n  //gifExpertApp\n  //h2 gif expert app\n  // hr\n  \n  ReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}